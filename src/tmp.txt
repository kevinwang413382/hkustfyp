import React, { Component } from 'react';
import './css/GraphContainer.css';
import d3 from 'd3';
import { Charts, ChartContainer, ChartRow, YAxis, LineChart, Baseline, styler } from "react-timeseries-charts";
import { TimeSeries  } from "pondjs";
import { format } from "d3-format";
import { timeFormat } from "d3-time-format";

const graph_data = require("./example.json");
/*
var data = [
  {date: '20090103', index:1.0},
  {date: '20090104', index:1.0},
  {date: '20090105', index:1.4},
  {date: '20090106', index:1.45},
  {date: '20090107', index:1.3},
  {date: '20090108', index:0},
  {date: '20090109', index:0.56},
  {date: '20090110', index:0.7},
  {date: '20090111', index:0.9},
  {date: '20090112', index:0.83},
  {date: '20090113', index:0.73},
  {date: '20090114', index:0.79},
  {date: '20090115', index:0.74},
  {date: '20090116', index:1.4},
  {date: '20090117', index:1.5},
  {date: '20090118', index:1.65},
  {date: '20090119', index:1.32},
  {date: '20090120', index:0.9},
  {date: '20090121', index:0.56},
  {date: '20090122', index:1.0},
  {date: '20090123', index:0.56},
  {date: '20090124', index:0.7},
  {date: '20090125', index:0.9},
  {date: '20090126', index:0.93},
  {date: '20090127', index:1.3},
  {date: '20090128', index:1.59},
  {date: '20090129', index:2.4},
  {date: '20090130', index:2.4},
  {date: '20090131', index:2.5},
  {date: '20090201', index:6.65},
  {date: '20090202', index:8.32},
  {date: '20090203', index:10.9},
  {date: '20090204', index:8.56},
]
*/
// var chartSeries = [
//      {
//        field: 'index',
//        name: 'index',
//
//      }
//    ]
//    var x = function(d) {
//        return d3.time.format("%Y%m%d").parse(d.date);
//      }
//    var xScale = 'time';

const test_data = [
      [1400425947000, 52],
      [1400425948000, 18],
      [1400425949000, 26],
      [1400425950000, 93],
      [1400425951000, 93],
      [1400425952000, 93]

  ];

    const style = styler([
        { key: "currency", color: "steelblue", width: 1, dashed: true }

    ]);

class GraphContainer extends Component{




  constructor(){
      super();
      const timeSeries =  new TimeSeries({
            name: "Currency",
            columns: ["time", "currency"],
            points: this.initPoint()
        });
      console.log(timeSeries.range());
      this.state = {
        width: 600,
        height: 300,
        tracker: null,
        timeseries: timeSeries,
        timerange: timeSeries.range()
      }

  }
  initPoint(){
    const dataPoints = graph_data.widget[0].data.reverse();
    let points = [];
    // for(var point of dataPoints){
    //
    //   points.push([point[0],point[1]]);
    // }
    for(var i = 1; i<dataPoints.length;i++){
      console.log(dataPoints[i][0]-dataPoints[i-1][0]);
    }
    return points;

  }
  handleTrackerChanged(tracker) {
      this.setState({ tracker });
  }
  handleTimeRangeChange(timerange) {
      this.setState({ timerange });
  }
  render(){
    return(
      <div onClick = {this.initPoint}>
      kevin
      </div>

    );
  }

}
// <ChartContainer timeRange={series1.timerange()} width={800}>
//     <ChartRow height="200">
//         <YAxis id="axis1" label="AUD" min={0.5} max={1.5} width="60" type="linear" format="$,.2f"/>
//         <Charts>
//             <LineChart axis="axis1" series={series1}/>
//             <LineChart axis="axis2" series={series2}/>
//         </Charts>
//         <YAxis id="axis2" label="Euro" min={0.5} max={1.5} width="80" type="linear" format="$,.2f"/>
//     </ChartRow>
// </ChartContainer>
export default GraphContainer;
// <LineZoom className = 'graph-container'
//
//    width= {this.state.width}
//    height= {this.state.height}
//    data= {data}
//    chartSeries= {this.state.series}
//    x= {x}
//    xScale= {xScale}
//  />
